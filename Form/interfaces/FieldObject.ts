export interface ValidationInterface {
    alpha          ?: boolean,
    alphaNum       ?: boolean,
    and            ?: ValidationInterface[],
    between        ?: number[],
    cep            ?: boolean,
    cnpj           ?: boolean,
    cpf            ?: boolean,
    date           ?: boolean,
    decimal        ?: boolean,
    email          ?: boolean,
    integer        ?: boolean,
    ipAddress      ?: boolean,
    macAddress     ?: boolean,
    maxLength      ?: number,
    maxValue       ?: number,
    minLength      ?: number,
    minValue       ?: number,
    not            ?: ValidationInterface[],
    numeric        ?: boolean,
    or             ?: ValidationInterface[],
    phone          ?: boolean,
    regex          ?: RegExp,
    required       ?: boolean,
    requiredIf     ?: ValidationInterface,
    requiredUnless ?: ValidationInterface,
    sameAs         ?: string,
    time           ?: boolean,
    time12         ?: boolean,
    time24         ?: boolean,
    url            ?: boolean,
    uuid           ?: boolean,
}
export interface FieldObject {
    type          : string,
    id           ?: string,
    name         ?: string,
    label        ?: string,
    labelClass   ?: string,
    inputClass   ?: string,
    placeholder  ?: string | boolean,
    value        ?: string | undefined,
    required     ?: boolean,
    size         ?: number
    errorMessage ?: string | boolean,
    disabled     ?: boolean,
    options      ?: { [ index in string ]: string },
    children     ?: { [ index in string | number ]: FieldObject },
    validation   ?: { [ key in keyof ValidationInterface ]?: ValidationInterface[ key ] }
}
